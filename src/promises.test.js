const getRandomValue = (min = 0, max = 1) => {
  // TODO: Complete this function to allow the test to pass
  return new Promise((resolve, reject) => {
    let number = Math.random();
    resolve(number)
  });
};

describe('getRandomValue', () => {
  it('returns a promise of a random integer', () => {
    getRandomValue().then(value => assert.isNumber(value));
  });
});

describe('getFourRandomValues', () => {
  const getFourRandomValues = (min, max) => {
    // TODO: Complete this function to allow the test to pass
    let fourRandomValues = [];
    for(let i=0;i<4;i++){
      fourRandomValues.push(getRandomValue().then(num => num));
    }
    
    return new Promise((resolve, reject) => {
      resolve(fourRandomValues)
    });
  };

  it('returns an array of four integers, generated by getRandomValue()', () => {
    getFourRandomValues().then(values => assert.lengthOf(values, 4));
  });
});
